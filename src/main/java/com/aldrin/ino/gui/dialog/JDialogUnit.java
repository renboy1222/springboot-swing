/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.aldrin.ino.gui.dialog;

import com.aldrin.ino.dao.CategoryDAO;
import com.aldrin.ino.dao.UnitDAO;
import com.aldrin.ino.gui.JFrameInoPOS;
import com.aldrin.ino.model.Category;
import com.aldrin.ino.model.Unit;
import com.aldrin.ino.gui.dialog.au.JDialogAUCategory;
import com.aldrin.ino.gui.dialog.au.JDialogAUUnit;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ALDRIN B. C.
 */
public class JDialogUnit extends javax.swing.JDialog implements MouseListener {

    /**
     * Creates new form JDialogUser
     */
    private UnitDAO unitDAO;
    private Unit unit;
    private JFrameInoPOS mainForm;

    public JDialogUnit(com.aldrin.ino.gui.JFrameInoPOS parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainForm = parent;
        this.unitDAO = new UnitDAO();
        this.unit = new Unit();
        setTable();
        selectUnit();
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextFieldX1 = new com.aldrin.ino.util.JTextFieldX();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unit");

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUser);

        jButton1.setText("New");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldX1.setFont(new java.awt.Font("Courier New", 0, 16));
        jTextFieldX1.setPlaceHolder("Search");
        jTextFieldX1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldX1KeyReleased(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.setMargin(new java.awt.Insets(2, 3, 3, 3));
        jButtonUpdate.setPreferredSize(new java.awt.Dimension(87, 23));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setMargin(new java.awt.Insets(2, 3, 3, 3));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(87, 23));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldX1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldX1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(634, 426));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String title = "New";
        JDialogAUUnit auUnit = new JDialogAUUnit(mainForm, true, title);
        auUnit.setVisible(true);
        selectUnit();
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUserMouseClicked
        int row = jTableUser.getSelectedRow();
        Long id = Long.parseLong(jTableUser.getModel().getValueAt(row, 0).toString());
        String firstnamel = jTableUser.getModel().getValueAt(row, 1).toString();
        String lastnamel = jTableUser.getModel().getValueAt(row, 2).toString();

        String usernamel = jTableUser.getModel().getValueAt(row, 3) == null ? "" : jTableUser.getModel().getValueAt(row, 3).toString();
        String passwordl = jTableUser.getModel().getValueAt(row, 4) == null ? "" : jTableUser.getModel().getValueAt(row, 4).toString();

        this.unit.setId(id);
        this.unit.setUnit(firstnamel);
        this.unit.setDescription(lastnamel);

    }//GEN-LAST:event_jTableUserMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        String title = "Update";
        JDialogAUUnit auUnit = new JDialogAUUnit(mainForm, true, title, unit);
        auUnit.setVisible(true);
        selectUnit();
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        String title = "Delete";
        JDialogAUUnit auUnit = new JDialogAUUnit(mainForm, true, unit, title);
        auUnit.setVisible(true);
        selectUnit();
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldX1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldX1KeyReleased
        String text = jTextFieldX1.getText().trim();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text + ",*"));
        }
    }//GEN-LAST:event_jTextFieldX1KeyReleased

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JDialogUser dialog = new JDialogUser(new com.aldrin.ino.view.JFrameInoPOS(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUser;
    private com.aldrin.ino.util.JTextFieldX jTextFieldX1;
    // End of variables declaration//GEN-END:variables
   private ArrayList<Category> userList;
    DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "UNIT", "DESCRIPTION"}, 0) {
        public Class getColumnClass(int columnIndex) {
            switch (columnIndex) {
                case 11:
                    return Boolean.class;
                default:
                    return Object.class;
            }
        }

        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };
    private TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableModel);

    private void setTable() {
        try {
            jTableUser.setCellSelectionEnabled(true);
            jTableUser = new JTable(tableModel);
            JTableHeader header = jTableUser.getTableHeader();
            header.setFont(new Font("Courier New", Font.BOLD, 14));
            header.setForeground(new Color(102, 102, 102));
            header.setPreferredSize(new Dimension(100, 35));
            jTableUser.setRowHeight(30);
            jTableUser.setRowSorter(sorter);
            jTableUser.addMouseListener(this);

            // Create a JTable with the model
//            JTable table = new JTable(model);
            jTableUser.setFont(new Font("Courier New", Font.PLAIN, 14));

            jScrollPane1.setViewportView(jTableUser);

            TableColumn[] column = new TableColumn[60];

            column[0] = jTableUser.getColumnModel().getColumn(0);
            column[0].setPreferredWidth(0);

            column[1] = jTableUser.getColumnModel().getColumn(1);
            column[1].setPreferredWidth(100);

            column[1] = jTableUser.getColumnModel().getColumn(2);
            column[1].setPreferredWidth(350);

            TableColumn hidden1 = jTableUser.getColumnModel().getColumn(0);
            hidden1.setMinWidth(0);
            hidden1.setPreferredWidth(0);
            hidden1.setMaxWidth(0);
//            TableColumn hidden2 = jTableUser.getColumnModel().getColumn(2);
//            hidden2.setMinWidth(0);
//            hidden2.setPreferredWidth(0);
//            hidden2.setMaxWidth(0);
//            TableColumn hidden3 = jTableUser.getColumnModel().getColumn(3);
//            hidden3.setMinWidth(0);
//            hidden3.setPreferredWidth(0);
//            hidden3.setMaxWidth(0);
//            TableColumn hidden4 = jTableUser.getColumnModel().getColumn(4);
//            hidden4.setMinWidth(0);
//            hidden4.setPreferredWidth(0);
//            hidden4.setMaxWidth(0);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == jTableUser) {
            if (e.getButton() == MouseEvent.BUTTON1) {
                if (e.getClickCount() == 1) {
                    int row = jTableUser.getSelectedRow();
                    jButtonUpdate.setEnabled(true);
                    jButtonDelete.setEnabled(true);
                    if (row != -1) {
                        Long idl = Long.parseLong(jTableUser.getValueAt(row, 0).toString());
                        String unitl = String.valueOf(jTableUser.getValueAt(row, 1).toString());
                        String descriptionl = String.valueOf(jTableUser.getValueAt(row, 2).toString());

                        Unit u = new Unit(idl, unitl, descriptionl);
                        this.unit = u;

                    }
                }
            }

        }
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    private void selectUnit() {
        List<Unit> list = unitDAO.listOfUnits();
        tableModel.setRowCount(0);
        list.forEach(pr -> {
            tableModel.addRow(new Object[]{
                pr.getId(),
                pr.getUnit(),
                pr.getDescription()
            });
        });
    }



}
